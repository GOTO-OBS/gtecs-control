#!/usr/bin/env python3
"""A script to provide overall control of the daemons."""

import sys
import time

from gtecs.control import misc
from gtecs.control import params
from gtecs.control.daemons import (check_daemon, kill_daemon, restart_daemon,
                                   shutdown_daemon, start_daemon)


if __name__ == '__main__':
    command = sys.argv[1]
    all_daemons = list(params.DAEMONS) + list(params.INTERFACES)
    if len(sys.argv) == 3:
        daemons = sorted(misc.valid_strings(sys.argv[2].split(','), all_daemons))
    elif len(sys.argv) > 3:
        daemons = sorted(sys.argv[2:])
    else:
        daemons = sorted(all_daemons)

    if command == 'start':
        for daemon_id in daemons:
            try:
                start_daemon(daemon_id)
            except Exception as error:
                print(f'{type(error).__name__}: "{error}"')
            time.sleep(1)

    elif command == 'shutdown':
        for daemon_id in daemons:
            try:
                shutdown_daemon(daemon_id)
            except Exception as error:
                print(f'{type(error).__name__}: "{error}"')
            time.sleep(1)

    elif command == 'kill':
        for daemon_id in daemons:
            try:
                kill_daemon(daemon_id)
            except Exception as error:
                print(f'{type(error).__name__}: "{error}"')
            time.sleep(1)

    elif command == 'restart':
        for daemon_id in daemons:
            try:
                restart_daemon(daemon_id)
            except Exception as error:
                print(f'{type(error).__name__}: "{error}"')
            time.sleep(1)

    elif command == 'ping':
        for daemon_id in daemons:
            try:
                check_daemon(daemon_id)
            except Exception as error:
                print(f'{type(error).__name__}: "{error}"')
            time.sleep(1)

    else:
        print(f'"{command}" not in valid commands (start, shutdown, restart, kill, ping)')
